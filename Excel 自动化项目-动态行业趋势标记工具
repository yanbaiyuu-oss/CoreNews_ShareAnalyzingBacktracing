
Excel 自动化项目：动态行业趋势标记工具
项目概述
本项目旨在通过一个 VBA 宏脚本，实现对两个 Excel 工作表之间数据的动态关联标记和高亮，以辅助分析特定日期下的行业表现趋势。该工具能够高效地将**“输入”工作表中的日期信息，映射到“趋势”**工作表上对应的行业单元格，并进行视觉高亮提示。

关键功能和工作流程
该自动化脚本主要在 Excel 环境下运行，并严格按照以下逻辑执行：

数据源读取：宏从 “输入” 工作表中，逐行读取日期（A 列）和行业名称（B 列）的数据对。

目标定位：在 “趋势” 工作表中，脚本以上述读取到的行业名称作为关键索引，在 A 列中查找匹配的行。

B 列标题动态更新：

脚本将当前读取到的日期值，写入到 “趋势”工作表 B 列的第 1 行（作为该列的标题）。

注意： 如果“输入”表有多条记录，后续的日期会覆盖 B 列标题。

精准高亮标记：

找到目标行业后，脚本仅对 “趋势”工作表 B 列中与该行业交叉的单元格进行操作。

对该单元格应用红色背景高亮，以示标记。

内容清空：为确保单元格内无文字残留（仅保留高亮效果），脚本会清除该单元格的内容。

项目价值
此宏脚本极大地提升了数据分析的效率：

自动化对齐：无需手动查找和复制粘贴日期，将数百行数据的比对工作瞬间完成。

视觉反馈：通过统一在 B 列进行高亮，分析师可以快速定位和查看特定日期下各个行业（在 A 列中列出）的对应标记状态。

易用性：一旦设置完成，用户只需运行一次宏，即可完成复杂的格式化和数据映射任务。

VB代码：
Sub AggregateAndHighlightByUniqueDate()
    
    ' 定义工作表变量
    Dim wsInput As Worksheet
    Dim wsTrend As Worksheet
    
    ' 定义循环和数据变量
    Dim lastRowInput As Long
    Dim inputRow As Long
    Dim inputDate As Date
    Dim industryName As String
    
    ' 定义字典对象，用于存储：唯一的日期键 -> 对应的列号
    ' (注意: 使用 CreateObject 确保在大多数系统上都能运行，不需要额外引用)
    Dim dateColumnMap As Object 
    
    Dim currentTrendCol As Long ' 用于追踪下一列的新增位置
    Dim trendRow As Long
    Dim dateKey As String ' 用于字典的唯一日期键
    Dim foundCell As Range
    
    On Error GoTo ErrorHandler
    
    ' --- 1. 初始化设置 ---
    Set wsInput = ThisWorkbook.Sheets("输入")
    Set wsTrend = ThisWorkbook.Sheets("趋势")
    Set dateColumnMap = CreateObject("Scripting.Dictionary")
    
    ' 确定“输入”表的最后一行 (A列)
    lastRowInput = wsInput.Cells(Rows.Count, "A").End(xlUp).Row
    
    If lastRowInput < 2 Then
        MsgBox "“输入”工作表数据不足。", vbExclamation
        Exit Sub
    End If
    
    ' 确定“趋势”表中开始添加新列的位置（A列之后的第一列）
    currentTrendCol = wsTrend.Cells(1, wsTrend.Columns.Count).End(xlToLeft).Column + 1
    If currentTrendCol = 1 Then currentTrendCol = 2 ' 确保至少从B列开始新增
    
    ' --- 2. 第一阶段：处理唯一日期并创建列标题 ---
    ' 目标：为每个唯一的日期创建一列，并记录该日期对应的列号
    
    For inputRow = 2 To lastRowInput
        
        ' 检查并格式化日期
        If IsDate(wsInput.Cells(inputRow, "A").Value) Then
            inputDate = wsInput.Cells(inputRow, "A").Value
            ' 使用标准格式化日期作为字典的唯一 Key
            dateKey = Format(inputDate, "yyyy-mm-dd")
        Else
            GoTo NextInputRow
        End If
        
        ' 检查日期是否已存在于字典（即是否已创建列）
        If Not dateColumnMap.Exists(dateKey) Then
            
            ' 1. 记录日期及其对应的列号
            dateColumnMap.Add dateKey, currentTrendCol
            
            ' 2. 在“趋势”表的第1行写入列标题（日期）
            wsTrend.Cells(1, currentTrendCol).Value = inputDate 
            
            ' 3. 移动到下一列的新增位置
            currentTrendCol = currentTrendCol + 1
            
        End If
        
NextInputRow:
    Next inputRow

    ' 检查是否有列被创建
    If dateColumnMap.Count = 0 Then
        MsgBox "未在“输入”表中找到有效的日期数据。", vbInformation
        Exit Sub
    End If
    
    ' --- 3. 第二阶段：查找行业并应用高亮 ---
    ' 目标：根据行业和日期定位，在高亮并清空对应的新列单元格
    
    For inputRow = 2 To lastRowInput
        
        ' 获取数据
        If IsDate(wsInput.Cells(inputRow, "A").Value) Then
            dateKey = Format(wsInput.Cells(inputRow, "A").Value, "yyyy-mm-dd")
        Else
            GoTo NextInputRow_Highlight
        End If
        
        industryName = Trim(wsInput.Cells(inputRow, "B").Value)
        If industryName = "" Then GoTo NextInputRow_Highlight
        
        ' 查找行业所在的行 (在趋势表A列)
        Set foundCell = wsTrend.Columns("A").Find( _
            What:=industryName, _
            LookIn:=xlValues, _
            LookAt:=xlWhole, _
            SearchOrder:=xlByRows)
            
        ' 如果找到行业，则进行高亮操作
        If Not foundCell Is Nothing Then
            
            trendRow = foundCell.Row
            
            ' 从字典获取该日期对应的列号
            Dim highlightColNum As Long
            highlightColNum = dateColumnMap.Item(dateKey)
            
            ' 目标单元格：行业所在行 & 日期所在列
            With wsTrend.Cells(trendRow, highlightColNum)
                
                ' 高亮显示为红色
                .Interior.Color = vbRed
                
                ' 确保单元格内容为空白 (只保留高亮)
                .ClearContents 
            End With
            
        End If
        
NextInputRow_Highlight:
    Next inputRow
    
    MsgBox "宏执行完毕！“趋势”工作表已根据唯一的日期和行业信息添加了 " & dateColumnMap.Count & " 列，并完成了高亮。", vbInformation
    Exit Sub

' --- 错误处理 ---
ErrorHandler:
    MsgBox "执行宏时发生错误：" & Err.Description & vbCrLf & _
           "错误代码: " & Err.Number, vbCritical
    
End Sub
